name: Publish

on:
  push:
    tags:
      - "*"
  release:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  binary:
    name: Publish ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
          - os: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
          - os: ubuntu-latest
            target: armv7-linux-androideabi
          - os: ubuntu-latest
            target: aarch64-linux-android
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Check if release exists
        id: check_release
        run: |
          if gh release view ${{ steps.get_version.outputs.VERSION }} > /dev/null 2>&1; then
            echo "RELEASE_EXISTS=true" >> "$GITHUB_OUTPUT"
          else
            echo "RELEASE_EXISTS=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        continue-on-error: true
        if: steps.check_release.outputs.RELEASE_EXISTS == 'false'
        run: |
          gh release create ${{ steps.get_version.outputs.VERSION }} \
            --title "Release ${{ steps.get_version.outputs.VERSION }}" \
            --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        id: build
        run: scripts/release ${{ matrix.target }}

      - name: Generate checksums
        run: |
          cd ./target/${{ matrix.target }}/release/
          cp navi.${{ steps.build.outputs.EXTENSION }} navi-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.${{ steps.build.outputs.EXTENSION }}
          sha256sum navi-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.${{ steps.build.outputs.EXTENSION }} > navi-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.sha256

      - name: Upload binaries to release
        run: |
          cd ./target/${{ matrix.target }}/release/
          gh release upload ${{ steps.get_version.outputs.VERSION }} \
            navi-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.${{ steps.build.outputs.EXTENSION }} \
            navi-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.sha256
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Job summary
        if: always()
        run: |
          echo "## Build Summary for ${{ matrix.target }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- **Version:** ${{ steps.get_version.outputs.VERSION }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- **Target:** ${{ matrix.target }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- **Extension:** ${{ steps.build.outputs.EXTENSION }}" >> "$GITHUB_STEP_SUMMARY"
          echo "- **Status:** ${{ job.status }}" >> "$GITHUB_STEP_SUMMARY"
